// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Tooling.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Input provided for the comparison operation
    /// </summary>
    public partial class ApiComparisonResultsInput
    {
        /// <summary>
        /// Initializes a new instance of the ApiComparisonResultsInput class.
        /// </summary>
        public ApiComparisonResultsInput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApiComparisonResultsInput class.
        /// </summary>
        public ApiComparisonResultsInput(SpecComparison source, SpecComparison target)
        {
            Source = source;
            Target = target;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "source")]
        public SpecComparison Source { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "target")]
        public SpecComparison Target { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Source == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Source");
            }
            if (Target == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Target");
            }
            if (Source != null)
            {
                Source.Validate();
            }
            if (Target != null)
            {
                Target.Validate();
            }
        }
    }
}
