// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Tooling.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// error details
    /// </summary>
    public partial class SemanticErrorErrorDetails
    {
        /// <summary>
        /// Initializes a new instance of the SemanticErrorErrorDetails class.
        /// </summary>
        public SemanticErrorErrorDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SemanticErrorErrorDetails class.
        /// </summary>
        /// <param name="validationCategory">Validation Category</param>
        /// <param name="providerNamespace">Provider Namespace</param>
        /// <param name="type">Error type</param>
        /// <param name="code">code</param>
        /// <param name="id">id</param>
        /// <param name="message">message</param>
        /// <param name="jsonref">jsonref</param>
        /// <param name="jsonPath">json-path</param>
        /// <param name="jsonUrl">jsonUrl</param>
        public SemanticErrorErrorDetails(string validationCategory = default(string), string providerNamespace = default(string), string type = default(string), object inner = default(object), string code = default(string), string id = default(string), string message = default(string), string jsonref = default(string), string jsonPath = default(string), string jsonUrl = default(string), SemanticErrorErrorDetailsJsonPosition jsonPosition = default(SemanticErrorErrorDetailsJsonPosition))
        {
            ValidationCategory = validationCategory;
            ProviderNamespace = providerNamespace;
            Type = type;
            Inner = inner;
            Code = code;
            Id = id;
            Message = message;
            Jsonref = jsonref;
            JsonPath = jsonPath;
            JsonUrl = jsonUrl;
            JsonPosition = jsonPosition;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets validation Category
        /// </summary>
        [JsonProperty(PropertyName = "validationCategory")]
        public string ValidationCategory { get; set; }

        /// <summary>
        /// Gets or sets provider Namespace
        /// </summary>
        [JsonProperty(PropertyName = "providerNamespace")]
        public string ProviderNamespace { get; set; }

        /// <summary>
        /// Gets or sets error type
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "inner")]
        public object Inner { get; set; }

        /// <summary>
        /// Gets or sets code
        /// </summary>
        [JsonProperty(PropertyName = "code")]
        public string Code { get; set; }

        /// <summary>
        /// Gets or sets id
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets message
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; set; }

        /// <summary>
        /// Gets or sets jsonref
        /// </summary>
        [JsonProperty(PropertyName = "jsonref")]
        public string Jsonref { get; set; }

        /// <summary>
        /// Gets or sets json-path
        /// </summary>
        [JsonProperty(PropertyName = "json-path")]
        public string JsonPath { get; set; }

        /// <summary>
        /// Gets or sets jsonUrl
        /// </summary>
        [JsonProperty(PropertyName = "jsonUrl")]
        public string JsonUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "jsonPosition")]
        public SemanticErrorErrorDetailsJsonPosition JsonPosition { get; set; }

    }
}
