// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Tooling.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class TraceValidationParameters
    {
        /// <summary>
        /// Initializes a new instance of the TraceValidationParameters class.
        /// </summary>
        public TraceValidationParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TraceValidationParameters class.
        /// </summary>
        /// <param name="repository">Name of the repository</param>
        /// <param name="branch">Name of the specific reference(Branch/Commit)
        /// in the repository.</param>
        /// <param name="resourceProvider">Resource provider</param>
        /// <param name="apiVersion">API Version</param>
        /// <param name="startDate">Start Date</param>
        /// <param name="endDate">End Date</param>
        /// <param name="commitHash">Commit Hash</param>
        /// <param name="token">Token to access private repositories.</param>
        public TraceValidationParameters(string repository, string branch, string resourceProvider, string apiVersion, string startDate, string endDate, string commitHash, string token = default(string))
        {
            Repository = repository;
            Branch = branch;
            ResourceProvider = resourceProvider;
            ApiVersion = apiVersion;
            StartDate = startDate;
            EndDate = endDate;
            CommitHash = commitHash;
            Token = token;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the repository
        /// </summary>
        [JsonProperty(PropertyName = "repository")]
        public string Repository { get; set; }

        /// <summary>
        /// Gets or sets name of the specific reference(Branch/Commit) in the
        /// repository.
        /// </summary>
        [JsonProperty(PropertyName = "branch")]
        public string Branch { get; set; }

        /// <summary>
        /// Gets or sets resource provider
        /// </summary>
        [JsonProperty(PropertyName = "resourceProvider")]
        public string ResourceProvider { get; set; }

        /// <summary>
        /// Gets or sets API Version
        /// </summary>
        [JsonProperty(PropertyName = "apiVersion")]
        public string ApiVersion { get; set; }

        /// <summary>
        /// Gets or sets start Date
        /// </summary>
        [JsonProperty(PropertyName = "startDate")]
        public string StartDate { get; set; }

        /// <summary>
        /// Gets or sets end Date
        /// </summary>
        [JsonProperty(PropertyName = "endDate")]
        public string EndDate { get; set; }

        /// <summary>
        /// Gets or sets commit Hash
        /// </summary>
        [JsonProperty(PropertyName = "commitHash")]
        public string CommitHash { get; set; }

        /// <summary>
        /// Gets or sets token to access private repositories.
        /// </summary>
        [JsonProperty(PropertyName = "token")]
        public string Token { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Repository == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Repository");
            }
            if (Branch == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Branch");
            }
            if (ResourceProvider == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ResourceProvider");
            }
            if (ApiVersion == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ApiVersion");
            }
            if (StartDate == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "StartDate");
            }
            if (EndDate == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "EndDate");
            }
            if (CommitHash == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CommitHash");
            }
        }
    }
}
