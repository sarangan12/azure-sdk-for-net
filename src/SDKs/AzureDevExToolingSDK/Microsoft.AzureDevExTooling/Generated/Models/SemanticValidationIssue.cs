// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Tooling.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class SemanticValidationIssue : StaticValidationIssue
    {
        /// <summary>
        /// Initializes a new instance of the SemanticValidationIssue class.
        /// </summary>
        public SemanticValidationIssue()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SemanticValidationIssue class.
        /// </summary>
        /// <param name="fileUrl">Url of the file.</param>
        /// <param name="code">The code  for the issue.</param>
        /// <param name="id">Issue id.</param>
        /// <param name="message">The issue message.</param>
        /// <param name="severity">severity</param>
        /// <param name="source">Source location of the issue.</param>
        /// <param name="docUrl">The url to the issue's documentation.</param>
        /// <param name="category">Validation Category</param>
        /// <param name="providerNamespace">Provider Namespace</param>
        public SemanticValidationIssue(string fileUrl, string code, string id, string message, int severity, IssueSourceLocation source, string docUrl = default(string), object inner = default(object), string category = default(string), string providerNamespace = default(string))
            : base(fileUrl, code, id, message, severity, source, docUrl, inner)
        {
            Category = category;
            ProviderNamespace = providerNamespace;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets validation Category
        /// </summary>
        [JsonProperty(PropertyName = "category")]
        public string Category { get; set; }

        /// <summary>
        /// Gets or sets provider Namespace
        /// </summary>
        [JsonProperty(PropertyName = "providerNamespace")]
        public string ProviderNamespace { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
