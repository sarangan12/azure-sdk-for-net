// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Tooling.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Position of the Linter Validation result
    /// </summary>
    public partial class LinterIssueSourcePosition
    {
        /// <summary>
        /// Initializes a new instance of the LinterIssueSourcePosition class.
        /// </summary>
        public LinterIssueSourcePosition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LinterIssueSourcePosition class.
        /// </summary>
        /// <param name="column">Column value</param>
        /// <param name="line">Line value</param>
        /// <param name="path">List of path</param>
        /// <param name="length">Length</param>
        /// <param name="valueOffset">Value Offset</param>
        /// <param name="valueLength">Value Length</param>
        public LinterIssueSourcePosition(int? column = default(int?), int? line = default(int?), IList<string> path = default(IList<string>), int? length = default(int?), int? valueOffset = default(int?), int? valueLength = default(int?))
        {
            Column = column;
            Line = line;
            Path = path;
            Length = length;
            ValueOffset = valueOffset;
            ValueLength = valueLength;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets column value
        /// </summary>
        [JsonProperty(PropertyName = "column")]
        public int? Column { get; set; }

        /// <summary>
        /// Gets or sets line value
        /// </summary>
        [JsonProperty(PropertyName = "line")]
        public int? Line { get; set; }

        /// <summary>
        /// Gets or sets list of path
        /// </summary>
        [JsonProperty(PropertyName = "path")]
        public IList<string> Path { get; set; }

        /// <summary>
        /// Gets or sets length
        /// </summary>
        [JsonProperty(PropertyName = "length")]
        public int? Length { get; set; }

        /// <summary>
        /// Gets or sets value Offset
        /// </summary>
        [JsonProperty(PropertyName = "valueOffset")]
        public int? ValueOffset { get; set; }

        /// <summary>
        /// Gets or sets value Length
        /// </summary>
        [JsonProperty(PropertyName = "valueLength")]
        public int? ValueLength { get; set; }

    }
}
