// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Tooling.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class UnmatchedOperation
    {
        /// <summary>
        /// Initializes a new instance of the UnmatchedOperation class.
        /// </summary>
        public UnmatchedOperation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UnmatchedOperation class.
        /// </summary>
        /// <param name="regions">The azure regions where the operation was
        /// encountered.</param>
        /// <param name="apiVersions">The API versions where the operation was
        /// encountered.</param>
        /// <param name="path">Path</param>
        /// <param name="count">The number of times the operation was
        /// encountered in the sampled traffic.</param>
        public UnmatchedOperation(IList<Region?> regions, IList<string> apiVersions, string path, double count)
        {
            Regions = regions;
            ApiVersions = apiVersions;
            Path = path;
            Count = count;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the azure regions where the operation was encountered.
        /// </summary>
        [JsonProperty(PropertyName = "regions")]
        public IList<Region?> Regions { get; set; }

        /// <summary>
        /// Gets or sets the API versions where the operation was encountered.
        /// </summary>
        [JsonProperty(PropertyName = "apiVersions")]
        public IList<string> ApiVersions { get; set; }

        /// <summary>
        /// Gets or sets path
        /// </summary>
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }

        /// <summary>
        /// Gets or sets the number of times the operation was encountered in
        /// the sampled traffic.
        /// </summary>
        [JsonProperty(PropertyName = "count")]
        public double Count { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Regions == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Regions");
            }
            if (ApiVersions == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ApiVersions");
            }
            if (Path == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Path");
            }
        }
    }
}
