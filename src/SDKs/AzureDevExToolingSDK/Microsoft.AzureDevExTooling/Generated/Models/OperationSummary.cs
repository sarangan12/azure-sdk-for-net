// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Tooling.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class OperationSummary
    {
        /// <summary>
        /// Initializes a new instance of the OperationSummary class.
        /// </summary>
        public OperationSummary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OperationSummary class.
        /// </summary>
        /// <param name="operationId">The ID of the operation.</param>
        /// <param name="totalCount">Total number of issues
        /// encountered.</param>
        /// <param name="uniqueIssuesCount">Number of unique issues
        /// encountered.</param>
        /// <param name="failingCount">Number of live operations encountered
        /// which have issues.</param>
        /// <param name="passingCount">Number of live operations encountered
        /// without issues.</param>
        /// <param name="apiVersion">The api version of the operation.</param>
        public OperationSummary(string operationId, double totalCount, double uniqueIssuesCount, double failingCount, double passingCount, string apiVersion = default(string))
        {
            OperationId = operationId;
            ApiVersion = apiVersion;
            TotalCount = totalCount;
            UniqueIssuesCount = uniqueIssuesCount;
            FailingCount = failingCount;
            PassingCount = passingCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the ID of the operation.
        /// </summary>
        [JsonProperty(PropertyName = "operationId")]
        public string OperationId { get; set; }

        /// <summary>
        /// Gets or sets the api version of the operation.
        /// </summary>
        [JsonProperty(PropertyName = "apiVersion")]
        public string ApiVersion { get; set; }

        /// <summary>
        /// Gets or sets total number of issues encountered.
        /// </summary>
        [JsonProperty(PropertyName = "totalCount")]
        public double TotalCount { get; set; }

        /// <summary>
        /// Gets or sets number of unique issues encountered.
        /// </summary>
        [JsonProperty(PropertyName = "uniqueIssuesCount")]
        public double UniqueIssuesCount { get; set; }

        /// <summary>
        /// Gets or sets number of live operations encountered which have
        /// issues.
        /// </summary>
        [JsonProperty(PropertyName = "failingCount")]
        public double FailingCount { get; set; }

        /// <summary>
        /// Gets or sets number of live operations encountered without issues.
        /// </summary>
        [JsonProperty(PropertyName = "passingCount")]
        public double PassingCount { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (OperationId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "OperationId");
            }
        }
    }
}
