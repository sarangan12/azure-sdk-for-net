// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Tooling
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ApiSpec.
    /// </summary>
    public static partial class ApiSpecExtensions
    {
            /// <summary>
            /// Get Api Spec comparison result of config (readme file &amp; tag) files
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='parameter'>
            /// Input Parameter for Comparison of config files.
            /// </param>
            public static ApiComparisonResult CompareWithConfig(this IApiSpec operations, ApiComparisonParameter parameter)
            {
                return operations.CompareWithConfigAsync(parameter).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get Api Spec comparison result of config (readme file &amp; tag) files
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='parameter'>
            /// Input Parameter for Comparison of config files.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ApiComparisonResult> CompareWithConfigAsync(this IApiSpec operations, ApiComparisonParameter parameter, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CompareWithConfigWithHttpMessagesAsync(parameter, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get Api Spec comparison result of json files
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='parameter'>
            /// Input Parameter for Comparison of json files.
            /// </param>
            public static ApiComparisonResult Compare(this IApiSpec operations, ApiComparisonParameter parameter)
            {
                return operations.CompareAsync(parameter).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get Api Spec comparison result of json files
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='parameter'>
            /// Input Parameter for Comparison of json files.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ApiComparisonResult> CompareAsync(this IApiSpec operations, ApiComparisonParameter parameter, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CompareWithHttpMessagesAsync(parameter, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
